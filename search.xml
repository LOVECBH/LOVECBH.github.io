<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>alpha.wallhaven.cc|我最爱的壁纸网站</title>
      <link href="/2018/12/01/six/"/>
      <url>/2018/12/01/six/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://alpha.wallhaven.cc/" target="_blank" rel="noopener">https://alpha.wallhaven.cc/</a></p></blockquote><blockquote><p>我最喜欢的壁纸就是在这里找的，给网站up主一个么么哒</p></blockquote><p><img src="/2018/12/01/six/1.jpg"></p><p><img src="/2018/12/01/six/2.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 推荐 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Focusky|一款有魔力的视频制作软件</title>
      <link href="/2018/12/01/five/"/>
      <url>/2018/12/01/five/</url>
      
        <content type="html"><![CDATA[<blockquote><p>话不多说，直接上成品视频</p></blockquote><p>&lt;iframe style=&quot;width:700px;height:400px&quot; src=&quot;http://fs.focusky.com.cn/axkki/ivuo/index.html&quot; seamless=&quot;seamless&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; &gt;&lt;/iframe&gt;</p>]]></content>
      
      
      <categories>
          
          <category> 推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Focusky </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>matplotlib|（一）</title>
      <link href="/2018/11/19/four/"/>
      <url>/2018/11/19/four/</url>
      
        <content type="html"><![CDATA[<blockquote><p>plot函数基本的用法有以下四种：</p></blockquote><ul><li>默认参数 plt.plot(x,y)</li><li>指定参数plt.plot(x,y, format_str)</li><li>默认参数plt.plot(y) ，x为0~N-1</li><li>指定参数plt.plot(y, format_str)，x为0~N-1</li></ul><p>传给 plot的参数可以是列表，但是向 plot中传入numpy数组是更常用的做法</p><p>事实上，如果传入的是列表，matplotlib会在内部将它转化成数组再进行处理</p><p>而且，可以在一张图上显示多组数据的处理</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment">#arrange不包括末端端点</span></span><br><span class="line">t=np.arange(<span class="number">0</span>,<span class="number">5.2</span>,<span class="number">0.2</span>)</span><br><span class="line">plt.plot(t,t,<span class="string">'r--'</span>,</span><br><span class="line">t,t**<span class="number">2</span>,<span class="string">'bs'</span>,</span><br><span class="line">t,t**<span class="number">3</span>,<span class="string">'g^'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></p><p><img src="/2018/11/19/four/1.png"></p><blockquote><p>字符参数</p></blockquote><p>表示颜色的字符参数有：</p><table><thead><tr><th>字符</th><th>颜色</th></tr></thead><tbody><tr><td><code>‘b’</code></td><td>蓝色，blue</td></tr><tr><td><code>‘g’</code></td><td>绿色，green</td></tr><tr><td><code>‘r’</code></td><td>红色，red</td></tr><tr><td><code>‘c’</code></td><td>青色，cyan</td></tr><tr><td><code>‘m’</code></td><td>品红，magenta</td></tr><tr><td><code>‘y’</code></td><td>黄色，yellow</td></tr><tr><td><code>‘k’</code></td><td>黑色，black</td></tr><tr><td><code>‘w’</code></td><td>白色，white</td></tr></tbody></table><p>表示类型的字符参数有：</p><table><thead><tr><th>字符</th><th>类型</th><th>字符</th><th>类型</th></tr></thead><tbody><tr><td><code>'-'</code></td><td>实线</td><td><code>'--'</code></td><td>虚线</td></tr><tr><td><code>'-.'</code></td><td>虚点线</td><td><code>':'</code></td><td>点线</td></tr><tr><td><code>'.'</code></td><td>点</td><td><code>','</code></td><td>像素点</td></tr><tr><td><code>'o'</code></td><td>圆点</td><td><code>'v'</code></td><td>下三角点</td></tr><tr><td><code>'^'</code></td><td>上三角点</td><td><code>'&lt;'</code></td><td>左三角点</td></tr><tr><td><code>'&gt;'</code></td><td>右三角点</td><td><code>'1'</code></td><td>下三叉点</td></tr><tr><td><code>'2'</code></td><td>上三叉点</td><td><code>'3'</code></td><td>左三叉点</td></tr><tr><td><code>'4'</code></td><td>右三叉点</td><td><code>'s'</code></td><td>正方点</td></tr><tr><td><code>'p'</code></td><td>五角点</td><td><code>'*'</code></td><td>星形点</td></tr><tr><td><code>'h'</code></td><td>六边形点1</td><td><code>'H'</code></td><td>六边形点2</td></tr><tr><td><code>'+'</code></td><td>加号点</td><td><code>'x'</code></td><td>乘号点</td></tr><tr><td><code>'D'</code></td><td>实心菱形点</td><td><code>'d'</code></td><td>瘦菱形点</td></tr><tr><td><code>'_'</code></td><td>横线点</td><td></td><td></td></tr></tbody></table><blockquote><p>图例：</p></blockquote><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#linspace可以通过endpoint来选择是否包括末端端点</span></span><br><span class="line">x=np.linspace(-np.pi,np.pi,endpoint=<span class="keyword">True</span>)</span><br><span class="line">y=np.sin(x)</span><br><span class="line">plt.plot(x,y,<span class="string">'r-'</span>,linewidth=<span class="number">5</span>)</span><br><span class="line">plt.title(<span class="string">'sin function'</span>,fontsize=<span class="number">24</span>)</span><br><span class="line"><span class="comment">#添加文字</span></span><br><span class="line">plt.text(<span class="number">-2</span>,<span class="number">0.5</span>,<span class="string">'put words'</span>,fontsize=<span class="number">16</span>)</span><br><span class="line"><span class="comment">#添加注释</span></span><br><span class="line">plt.annotate(<span class="string">'annotate'</span>,xy=(<span class="number">0</span>,<span class="number">0</span>),xytext=(<span class="number">2</span>,<span class="number">-0.75</span>),</span><br><span class="line">             arrowprops=dict(facecolor=<span class="string">'black'</span>,shrink=<span class="number">0.05</span>),fontsize=<span class="number">16</span>)</span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>,fontsize=<span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>,fontsize=<span class="number">16</span>)</span><br><span class="line"><span class="comment">#网格线plt.grid(boole, which, axis, color, linestyle, linewidth)</span></span><br><span class="line"><span class="comment">#坐标轴格式</span></span><br><span class="line">plt.tick_params(axis=<span class="string">'both'</span>,labelsize=<span class="number">12</span>)</span><br><span class="line"><span class="comment">#坐标轴范围</span></span><br><span class="line">plt.axis([<span class="number">-4</span>,<span class="number">4</span>,<span class="number">-1.5</span>,<span class="number">1.5</span>])</span><br><span class="line">plt.savefig(<span class="string">'D:/Hexofiles/source/_posts/four/2.png'</span>,bbox_inchs=<span class="string">'tight'</span>)</span><br></pre></td></tr></table></figure></p><p><img src="/2018/11/19/four/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 系统学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python|随机数和cmap的结合：有点东西</title>
      <link href="/2018/11/17/three/"/>
      <url>/2018/11/17/three/</url>
      
        <content type="html"><![CDATA[<blockquote><p>渐变颜色生成5万个随机数，过程清晰透彻</p></blockquote><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from random import choice</span><br><span class="line"></span><br><span class="line">class RandomWalk():</span><br><span class="line">    def __init__(self,num_points=50000):</span><br><span class="line">        self.num_points=num_points</span><br><span class="line">        self.x_values=[0]</span><br><span class="line">        self.y_values=[0]</span><br><span class="line">    def fill_walk(self):</span><br><span class="line">        while len(self.x_values)&lt;self.num_points:</span><br><span class="line">            x_direction=choice([1,-1])</span><br><span class="line">            x_distance=choice([0,1,2,3,4])</span><br><span class="line">            x_step=x_direction*x_distance</span><br><span class="line">            y_direction=choice([1,-1])</span><br><span class="line">            y_distance=choice([0,1,2,3,4])</span><br><span class="line">            y_step=y_direction*y_distance</span><br><span class="line">            if x_step==0 and y_step==0:</span><br><span class="line">                continue</span><br><span class="line">            next_x=self.x_values[-1]+x_step</span><br><span class="line">            next_y=self.y_values[-1]+y_step</span><br><span class="line">            self.x_values.append(next_x)</span><br><span class="line">            self.y_values.append(next_y)</span><br><span class="line">while True:</span><br><span class="line">    rw=RandomWalk()</span><br><span class="line">    rw.fill_walk()</span><br><span class="line">    point_numbers=list(range(rw.num_points))</span><br><span class="line">    #edgecolor=&apos;none&apos;删除每个点周围的轮廓</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,cmap=plt.cm.Blues,edgecolors=&apos;none&apos;,s=1)</span><br><span class="line">    plt.scatter(0,0,c=&apos;green&apos;,edgecolors=&apos;none&apos;,s=100)</span><br><span class="line">    plt.scatter(rw.x_values[-1],rw.y_values[-1],c=&apos;red&apos;,edgecolors=&apos;none&apos;,s=100)</span><br><span class="line">    plt.axes().get_xaxis().set_visible(False)</span><br><span class="line">    plt.axes().get_yaxis().set_visible(False)</span><br><span class="line">    plt.tick_params(axis=&quot;both&quot;,labelsize=15)</span><br><span class="line">    plt.show()</span><br><span class="line">    keep_running=input(&quot;Make another work?(y/n):&quot;)</span><br><span class="line">    if keep_running==&apos;n&apos;:</span><br><span class="line">        break</span><br></pre></td></tr></table></figure></p><p><img src="/2018/11/17/three/random.png"></p><blockquote><p>cmap控制渐变颜色的类型，下面给出部分图例对照</p></blockquote><p>Accent</p><p><img src="/2018/11/17/three/Accent.png"></p><p>Blues</p><p><img src="/2018/11/17/three/Blues.png"></p><p>BuPu</p><p><img src="/2018/11/17/three/BuPu.png"></p><p>coolwarm</p><p><img src="/2018/11/17/three/coolwarm.png"></p><p>Greens</p><p><img src="/2018/11/17/three/Greens.png"></p><p>Greys</p><p><img src="/2018/11/17/three/Greys.png"></p><p>hot</p><p><img src="/2018/11/17/three/hot.png"></p><p>jet</p><p><img src="/2018/11/17/three/jet.png"></p><p>Pastel2</p><p><img src="/2018/11/17/three/Pastel2.png"></p><p>PuRd</p><p><img src="/2018/11/17/three/PuRd.png"></p><p>Purples</p><p><img src="/2018/11/17/three/Purples.png"></p><p>Reds</p><p><img src="/2018/11/17/three/Reds.png"></p><p>spring</p><p><img src="/2018/11/17/three/spring.png"></p><p>viridis</p><p><img src="/2018/11/17/three/viridis.png"></p><p>winter</p><p><img src="/2018/11/17/three/winter.png"></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>R|ggplot2-想女朋友了，这么做不过分吧？</title>
      <link href="/2018/11/13/second/"/>
      <url>/2018/11/13/second/</url>
      
        <content type="html"><![CDATA[<blockquote><p>ggplot2心形图</p></blockquote><p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line"><span class="keyword">library</span>(ggthemes)</span><br><span class="line"><span class="comment">#建立笛卡尔心形函数所需要的数据heartd</span></span><br><span class="line">t=seq(<span class="number">0</span>,<span class="number">2</span>*pi,by=<span class="number">0.1</span>)</span><br><span class="line">x=<span class="number">16</span>*sin(t)^<span class="number">3</span></span><br><span class="line">y=<span class="number">13</span>*cos(t)-<span class="number">5</span>*cos(<span class="number">2</span>*t)-<span class="number">2</span>*cos(<span class="number">3</span>*t)-cos(<span class="number">4</span>*t)</span><br><span class="line">a=(x-min(x))/(max(x)-min(x))</span><br><span class="line">b=(y-min(y))/(max(y)-min(y))</span><br><span class="line">heartd &lt;- data.frame(t,x,y,a,b)</span><br><span class="line"><span class="comment">#使用ggplot的路径图画出心形</span></span><br><span class="line">ggplot(heartd,aes(a,b))+geom_polygon(fill=<span class="string">"pink"</span>)</span><br><span class="line">+theme_map()+labs(title=<span class="string">"送给可爱的程百卉"</span>)</span><br><span class="line">+theme(plot.title=element_text(hjust=<span class="number">0.5</span>,color=<span class="string">"red"</span>,size=<span class="number">28</span>))</span><br><span class="line">+annotate(<span class="string">"text"</span>,label=<span class="string">"你像电池\n我像手机\n</span></span><br><span class="line"><span class="string">没有你就没有我的全世界"</span>,size=<span class="number">10</span>,color=<span class="string">"red"</span>,x=<span class="number">0.5</span>,y=<span class="number">0.6</span>)</span><br></pre></td></tr></table></figure></p><p><img src="/2018/11/13/second/heart.png"></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
