<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Python|随机数和matplotlib_cmap的结合：有点东西</title>
      <link href="/2018/11/17/three/"/>
      <url>/2018/11/17/three/</url>
      
        <content type="html"><![CDATA[<blockquote><p>渐变颜色生成5万个随机数，过程清晰透彻</p></blockquote><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from random import choice</span><br><span class="line"></span><br><span class="line">class RandomWalk():</span><br><span class="line">    def __init__(self,num_points=50000):</span><br><span class="line">        self.num_points=num_points</span><br><span class="line">        self.x_values=[0]</span><br><span class="line">        self.y_values=[0]</span><br><span class="line">    def fill_walk(self):</span><br><span class="line">        while len(self.x_values)&lt;self.num_points:</span><br><span class="line">            x_direction=choice([1,-1])</span><br><span class="line">            x_distance=choice([0,1,2,3,4])</span><br><span class="line">            x_step=x_direction*x_distance</span><br><span class="line">            y_direction=choice([1,-1])</span><br><span class="line">            y_distance=choice([0,1,2,3,4])</span><br><span class="line">            y_step=y_direction*y_distance</span><br><span class="line">            if x_step==0 and y_step==0:</span><br><span class="line">                continue</span><br><span class="line">            next_x=self.x_values[-1]+x_step</span><br><span class="line">            next_y=self.y_values[-1]+y_step</span><br><span class="line">            self.x_values.append(next_x)</span><br><span class="line">            self.y_values.append(next_y)</span><br><span class="line">while True:</span><br><span class="line">    rw=RandomWalk()</span><br><span class="line">    rw.fill_walk()</span><br><span class="line">    point_numbers=list(range(rw.num_points))</span><br><span class="line">    #edgecolor=&apos;none&apos;删除每个点周围的轮廓</span><br><span class="line">    plt.scatter(rw.x_values,rw.y_values,c=point_numbers,cmap=plt.cm.Blues,edgecolors=&apos;none&apos;,s=1)</span><br><span class="line">    plt.scatter(0,0,c=&apos;green&apos;,edgecolors=&apos;none&apos;,s=100)</span><br><span class="line">    plt.scatter(rw.x_values[-1],rw.y_values[-1],c=&apos;red&apos;,edgecolors=&apos;none&apos;,s=100)</span><br><span class="line">    plt.axes().get_xaxis().set_visible(False)</span><br><span class="line">    plt.axes().get_yaxis().set_visible(False)</span><br><span class="line">    plt.tick_params(axis=&quot;both&quot;,labelsize=15)</span><br><span class="line">    plt.show()</span><br><span class="line">    keep_running=input(&quot;Make another work?(y/n):&quot;)</span><br><span class="line">    if keep_running==&apos;n&apos;:</span><br><span class="line">        break</span><br></pre></td></tr></table></figure></p><p><img src="/2018/11/17/three/random.png"></p><blockquote><p>cmap控制渐变颜色的类型，下面给出部分图例对照</p></blockquote><p>Accent</p><p><img src="/2018/11/17/three/Accent.png"></p><p>Blues</p><p><img src="/2018/11/17/three/Blues.png"></p><p>BuPu</p><p><img src="/2018/11/17/three/BuPu.png"></p><p>coolwarm</p><p><img src="/2018/11/17/three/coolwarm.png"></p><p>Greens</p><p><img src="/2018/11/17/three/Greens.png"></p><p>Greys</p><p><img src="/2018/11/17/three/Greys.png"></p><p>hot</p><p><img src="/2018/11/17/three/hot.png"></p><p>jet</p><p><img src="/2018/11/17/three/jet.png"></p><p>Pastel2</p><p><img src="/2018/11/17/three/Pastel2.png"></p><p>PuRd</p><p><img src="/2018/11/17/three/PuRd.png"></p><p>Purples</p><p><img src="/2018/11/17/three/Purples.png"></p><p>Reds</p><p><img src="/2018/11/17/three/Reds.png"></p><p>spring</p><p><img src="/2018/11/17/three/spring.png"></p><p>viridis</p><p><img src="/2018/11/17/three/viridis.png"></p><p>winter</p><p><img src="/2018/11/17/three/winter.png"></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>R|ggplot2-想女朋友了，这么做不过分吧？</title>
      <link href="/2018/11/13/second/"/>
      <url>/2018/11/13/second/</url>
      
        <content type="html"><![CDATA[<blockquote><p>ggplot2心形图</p></blockquote><p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line"><span class="keyword">library</span>(ggthemes)</span><br><span class="line"><span class="comment">#建立笛卡尔心形函数所需要的数据heartd</span></span><br><span class="line">t=seq(<span class="number">0</span>,<span class="number">2</span>*pi,by=<span class="number">0.1</span>)</span><br><span class="line">x=<span class="number">16</span>*sin(t)^<span class="number">3</span></span><br><span class="line">y=<span class="number">13</span>*cos(t)-<span class="number">5</span>*cos(<span class="number">2</span>*t)-<span class="number">2</span>*cos(<span class="number">3</span>*t)-cos(<span class="number">4</span>*t)</span><br><span class="line">a=(x-min(x))/(max(x)-min(x))</span><br><span class="line">b=(y-min(y))/(max(y)-min(y))</span><br><span class="line">heartd &lt;- data.frame(t,x,y,a,b)</span><br><span class="line"><span class="comment">#使用ggplot的路径图画出心形</span></span><br><span class="line">ggplot(heartd,aes(a,b))+geom_polygon(fill=<span class="string">"pink"</span>)</span><br><span class="line">+theme_map()+labs(title=<span class="string">"送给可爱的程百卉"</span>)</span><br><span class="line">+theme(plot.title=element_text(hjust=<span class="number">0.5</span>,color=<span class="string">"red"</span>,size=<span class="number">28</span>))</span><br><span class="line">+annotate(<span class="string">"text"</span>,label=<span class="string">"你像电池\n我像手机\n</span></span><br><span class="line"><span class="string">没有你就没有我的全世界"</span>,size=<span class="number">10</span>,color=<span class="string">"red"</span>,x=<span class="number">0.5</span>,y=<span class="number">0.6</span>)</span><br></pre></td></tr></table></figure></p><p><img src="/2018/11/13/second/heart.png"></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>STATA|内生变量的处理：2SLS（工具变量法）</title>
      <link href="/2018/11/06/first/"/>
      <url>/2018/11/06/first/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文使用简单线性回归模型：$Y=\alpha+\beta X+u$</p></blockquote><p>当解释变量$X$和扰动项$u$相关时，该解释变量$X$被称为内生变量，此时CLRM假定的严格外生性得不到满足，OLS不再是BLUE$$Cov(X,u)\ne0$$但是如果能将内生变量分为两部分：一部分和扰动项相关，另一部分和扰动项不相关，那么就可以用和扰动项不相关的那部分得到一致估计</p><hr><h2>1、工具变量法</h2><p>为了分离内生变量，引入工具变量$Z$：$$Y=\alpha+\beta X+\gamma Z+\delta$$</p><p>有效的工具变量需要满足以下条件：</p><ul><li><strong>相关性</strong>：工具变量与内生变量相关</li></ul><p>$$Cov(Z,X)\ne0$$</p><ul><li><strong>外生性</strong>：工具变量与扰动项不相关</li></ul><p>$$Cov(Z,u)=0$$</p><h2>2、二阶段最小二乘法（2SLS)</h2><p>工具变量法一般用“二阶段最小二乘法”来实现，顾名思义，该方法通过两个阶段的回归来完成</p><ul><li><strong>第一阶段回归</strong>：用内生变量$X$对工具变量$Z$回归，消除扰动项$w$：</li></ul><p>$$X=\lambda_0+\lambda_1 Z+w\longrightarrow \hat{X}=\hat{\lambda_0}+\hat{\lambda_1}Z$$</p><ul><li><strong>第二阶段回归</strong>：用被解释变量$Y$对第一阶段回归的拟合值$\hat{X}$进行回归</li></ul><p>我们来看一下第二阶段回归的过程，回归方程可以这样写：$Y=\alpha+\beta \hat{X} +\beta (X-\hat{X})+u$</p><p>容易看出，这是由$Y=\alpha+\beta X+u$变形得来的，其扰动项$\varepsilon=\beta (X-\hat{X})+u$</p><p>接下来分析$\hat{X}$与$\varepsilon$的相关性：$$Cov(\hat{X},\varepsilon)=Cov(\hat{X},u)+\beta Cov(\hat{X},X-\hat{X})$$首先，由于$\hat{X}$是$Z$的线性函数，而$Cov(Z,u)=0$（工具变量的外生性），故$Cov(\hat{X},u)=0$</p><p>其次，拟合值$\hat{X}$与残差$X-\hat{X}$正交（OLS的正交性），故$Cov(\hat{X},X-\hat{X})=0$</p><p>最后，得到结论：第二阶段回归的解释变量$\hat{X}​$与扰动项$\varepsilon​$不相关，故2SLS一致</p><p><strong>从以上分析可以看出，2SLS的实质：把内生变量分为两部分，由工具变量造成的外生部分，以及与扰动项相关的其余部分</strong></p><h2>3、上课补充</h2><p>1、内生性有三种：</p><ul><li><p><strong>遗失变量</strong></p></li><li><p><strong>反向因果</strong></p></li><li><p><strong>测量误差</strong></p></li></ul><p>前两种很常见，第三种很少考虑</p><p>2、自变量分为：</p><ul><li><p><strong>核心变量</strong></p></li><li><p><strong>控制变量</strong></p></li></ul><p>控制变量的作用是为了保证核心变量估计的一致性，相比于控制变量，核心变量更重要，所以做分析时要有取有舍</p><p>3、分离的是扰动项，不是内生变量</p><hr>]]></content>
      
      
      <categories>
          
          <category> 计量 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STATA </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
